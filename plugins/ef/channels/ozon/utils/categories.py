"""
Ozon商品分类映射
包含常用分类的中文名称映射
"""

# Ozon 商品分类ID到中文名称的映射
CATEGORY_MAPPING = {
    # 服装类
    15621025: "女装",
    15621026: "男装",
    15621027: "童装",
    15621028: "内衣",
    15621029: "鞋类",
    15621030: "包包和配饰",
    # 电子产品
    15728120: "手机和配件",
    15728121: "电脑和配件",
    15728122: "平板电脑",
    15728123: "智能手表",
    15728124: "耳机",
    15728125: "相机和摄影",
    # 家居用品
    14810726: "家具",
    14810727: "厨房用品",
    14810728: "床上用品",
    14810729: "家装材料",
    14810730: "园艺用品",
    14810731: "清洁用品",
    # 美妆个护
    6502089: "护肤品",
    6502090: "彩妆",
    6502091: "香水",
    6502092: "个人护理",
    6502093: "美发产品",
    # 运动户外
    11278030: "运动服装",
    11278031: "运动鞋",
    11278032: "健身器材",
    11278033: "户外装备",
    11278034: "运动配件",
    # 玩具
    8071783: "儿童玩具",
    8071784: "益智玩具",
    8071785: "模型玩具",
    8071786: "户外玩具",
    # 图书
    13300590: "小说",
    13300591: "教育书籍",
    13300592: "儿童图书",
    13300593: "专业书籍",
    # 食品
    9200001: "零食",
    9200002: "饮料",
    9200003: "茶叶咖啡",
    9200004: "保健品",
    # 汽车用品
    17028922: "汽车配件",
    17028923: "汽车保养",
    17028924: "车载电子",
    17028925: "摩托车配件",
    # 宠物用品
    12040876: "宠物食品",
    12040877: "宠物玩具",
    12040878: "宠物护理",
    # 办公用品
    8014813: "文具",
    8014814: "办公设备",
    8014815: "办公家具",
    # 其他常见分类
    0: "未分类",
}


def get_category_name(category_id: int, default: str = "其他") -> str:
    """
    获取分类的中文名称

    Args:
        category_id: Ozon分类ID
        default: 默认分类名称

    Returns:
        分类的中文名称
    """
    return CATEGORY_MAPPING.get(category_id, default)


def get_category_tree_name(category_id: int) -> str:
    """
    获取分类的层级名称（带父级）
    目前简化处理，后续可以扩展为多级分类

    Args:
        category_id: Ozon分类ID

    Returns:
        分类的层级名称
    """
    name = get_category_name(category_id)
    # 后续可以扩展为: "电子产品 > 手机和配件" 格式
    return name


def search_category_by_name(name: str) -> list:
    """
    根据名称搜索分类

    Args:
        name: 分类名称关键词

    Returns:
        匹配的分类列表 [(category_id, category_name), ...]
    """
    results = []
    name_lower = name.lower()

    for cat_id, cat_name in CATEGORY_MAPPING.items():
        if name_lower in cat_name.lower():
            results.append((cat_id, cat_name))

    return results
