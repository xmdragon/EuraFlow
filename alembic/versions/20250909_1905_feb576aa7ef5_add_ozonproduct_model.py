"""Add OzonProduct model

Revision ID: feb576aa7ef5
Revises: fd489cf3cb5a
Create Date: 2025-09-09 19:05:28.398229

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'feb576aa7ef5'
down_revision = 'fd489cf3cb5a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_ozon_shops_owner_user_id', table_name='ozon_shops')
    op.drop_index('ix_ozon_shops_status', table_name='ozon_shops')
    op.drop_table('ozon_shops')
    op.alter_column('shops', 'settings',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               server_default=None,
               existing_comment='店铺配置',
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否激活',
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=50),
               server_default=None,
               existing_comment='角色：admin/operator/viewer',
               existing_nullable=False)
    op.alter_column('users', 'permissions',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               server_default=None,
               existing_comment='权限列表',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'permissions',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               server_default=sa.text("'[]'::json"),
               existing_comment='权限列表',
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=50),
               server_default=sa.text("'viewer'::character varying"),
               existing_comment='角色：admin/operator/viewer',
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='是否激活',
               existing_nullable=False)
    op.alter_column('shops', 'settings',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               server_default=sa.text("'{}'::json"),
               existing_comment='店铺配置',
               existing_nullable=False)
    op.create_table('ozon_shops',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False, comment='Ozon店铺ID'),
    sa.Column('shop_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False, comment='店铺名称'),
    sa.Column('platform', sa.VARCHAR(length=50), server_default=sa.text("'ozon'::character varying"), autoincrement=False, nullable=False, comment='平台名称'),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'active'::character varying"), autoincrement=False, nullable=False, comment='店铺状态'),
    sa.Column('owner_user_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='店铺所有者ID'),
    sa.Column('client_id', sa.VARCHAR(length=200), autoincrement=False, nullable=False, comment='Ozon Client ID'),
    sa.Column('api_key_enc', sa.TEXT(), autoincrement=False, nullable=False, comment='加密的API Key'),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=False, comment='店铺配置（Webhook、同步设置等）'),
    sa.Column('stats', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='店铺统计信息'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='更新时间'),
    sa.Column('last_sync_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='最后同步时间'),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], name='ozon_shops_owner_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='ozon_shops_pkey'),
    sa.UniqueConstraint('owner_user_id', 'shop_name', name='uq_ozon_shop_owner_name')
    )
    op.create_index('ix_ozon_shops_status', 'ozon_shops', ['status'], unique=False)
    op.create_index('ix_ozon_shops_owner_user_id', 'ozon_shops', ['owner_user_id'], unique=False)
    # ### end Alembic commands ###