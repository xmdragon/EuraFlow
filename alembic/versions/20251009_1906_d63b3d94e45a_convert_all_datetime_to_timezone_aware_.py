"""convert_all_datetime_to_timezone_aware_in_ozon_models

Revision ID: d63b3d94e45a
Revises: bc94f8c80f6a
Create Date: 2025-10-09 19:06:52.602636

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd63b3d94e45a'
down_revision = 'bc94f8c80f6a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_ozon_product_selection_import_history_id', table_name='ozon_product_selection_import_history')
    op.drop_table('ozon_product_selection_import_history')
    op.drop_index('ix_watermark_tasks_batch_id', table_name='watermark_tasks')
    op.drop_index('ix_watermark_tasks_created_at', table_name='watermark_tasks')
    op.drop_index('ix_watermark_tasks_product_id', table_name='watermark_tasks')
    op.drop_index('ix_watermark_tasks_shop_id', table_name='watermark_tasks')
    op.drop_index('ix_watermark_tasks_status', table_name='watermark_tasks')
    op.drop_index('uq_watermark_task_processing', table_name='watermark_tasks', postgresql_where="((status)::text = ANY ((ARRAY['pending'::character varying, 'processing'::character varying])::text[]))")
    op.drop_table('watermark_tasks')
    op.drop_index('idx_ozon_order_items_order', table_name='ozon_order_items')
    op.drop_index('idx_ozon_order_items_sku', table_name='ozon_order_items')
    op.drop_table('ozon_order_items')
    op.drop_index('idx_brand_price', table_name='ozon_product_selection_items')
    op.drop_index('idx_commission', table_name='ozon_product_selection_items')
    op.drop_index('idx_product_id', table_name='ozon_product_selection_items')
    op.drop_index('idx_product_id_name', table_name='ozon_product_selection_items')
    op.drop_index('idx_product_selection_user_id', table_name='ozon_product_selection_items')
    op.drop_index('idx_sales_weight', table_name='ozon_product_selection_items')
    op.drop_index('idx_user_product_name', table_name='ozon_product_selection_items')
    op.drop_index('ix_ozon_product_selection_items_brand', table_name='ozon_product_selection_items')
    op.drop_index('ix_ozon_product_selection_items_brand_normalized', table_name='ozon_product_selection_items')
    op.drop_index('ix_ozon_product_selection_items_id', table_name='ozon_product_selection_items')
    op.drop_index('ix_ozon_product_selection_items_monthly_sales_volume', table_name='ozon_product_selection_items')
    op.drop_index('ix_ozon_product_selection_items_package_weight', table_name='ozon_product_selection_items')
    op.drop_table('ozon_product_selection_items')
    op.drop_index('idx_ozon_chat_order', table_name='ozon_chats')
    op.drop_index('idx_ozon_chat_shop_status', table_name='ozon_chats')
    op.drop_index('ix_ozon_chats_shop_id', table_name='ozon_chats')
    op.drop_table('ozon_chats')
    op.drop_index('idx_ozon_packages_tracking', table_name='ozon_shipment_packages')
    op.drop_table('ozon_shipment_packages')
    op.drop_index('ix_ozon_shops_owner_user_id', table_name='ozon_shops')
    op.drop_index('ix_ozon_shops_status', table_name='ozon_shops')
    op.drop_table('ozon_shops')
    op.drop_index('idx_ozon_products_ozon_archived', table_name='ozon_products')
    op.drop_index('idx_ozon_products_ozon_visibility', table_name='ozon_products')
    op.drop_index('ix_ozon_products_offer_id', table_name='ozon_products')
    op.drop_index('ix_ozon_products_ozon_status', table_name='ozon_products')
    op.drop_index('ix_ozon_products_shop_id', table_name='ozon_products')
    op.drop_index('ix_ozon_products_sku', table_name='ozon_products')
    op.drop_index('ix_ozon_products_status', table_name='ozon_products')
    op.drop_index('ix_ozon_products_sync_status', table_name='ozon_products')
    op.drop_table('ozon_products')
    op.drop_table('cloudinary_configs')
    op.drop_index('ix_ozon_orders_cancel_reason_id', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_created_at', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_delivery_type', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_is_legal', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_order_number', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_payment_type', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_posting_number', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_shop_id', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_status', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_sync_mode', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_tpl_provider_id', table_name='ozon_orders')
    op.drop_index('ix_ozon_orders_warehouse_id', table_name='ozon_orders')
    op.drop_table('ozon_orders')
    op.drop_index('idx_ozon_sync_log_batch', table_name='ozon_sync_logs')
    op.drop_index('idx_ozon_sync_log_shop', table_name='ozon_sync_logs')
    op.drop_index('idx_ozon_sync_log_status', table_name='ozon_sync_logs')
    op.drop_table('ozon_sync_logs')
    op.drop_index('idx_ozon_chat_shop_chat', table_name='ozon_chat_messages')
    op.drop_index('idx_ozon_chat_unread', table_name='ozon_chat_messages')
    op.drop_index('ix_ozon_chat_messages_chat_id', table_name='ozon_chat_messages')
    op.drop_index('ix_ozon_chat_messages_shop_id', table_name='ozon_chat_messages')
    op.drop_table('ozon_chat_messages')
    op.drop_index('idx_ozon_postings_date', table_name='ozon_postings')
    op.drop_index('idx_ozon_postings_status', table_name='ozon_postings')
    op.drop_index('idx_ozon_postings_warehouse', table_name='ozon_postings')
    op.drop_table('ozon_postings')
    op.drop_index('idx_ozon_refunds_date', table_name='ozon_refunds')
    op.drop_index('idx_ozon_refunds_status', table_name='ozon_refunds')
    op.drop_table('ozon_refunds')
    op.drop_index('ix_watermark_configs_shop_id', table_name='watermark_configs')
    op.drop_table('watermark_configs')
    op.alter_column('api_keys', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否激活',
               existing_nullable=False)
    op.alter_column('orders', 'platform',
               existing_type=sa.TEXT(),
               comment='平台标识',
               existing_comment='平台标识，固定为 ozon',
               existing_nullable=False)
    op.alter_column('orders', 'external_id',
               existing_type=sa.TEXT(),
               comment='外部平台订单ID',
               existing_comment='Ozon order_id',
               existing_nullable=False)
    op.alter_column('orders', 'external_no',
               existing_type=sa.TEXT(),
               comment='外部平台订单编号',
               existing_comment='posting_number 买家可见编号',
               existing_nullable=False)
    op.alter_column('orders', 'external_status',
               existing_type=sa.TEXT(),
               comment='外部平台原始状态',
               existing_comment='Ozon 原始状态',
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               comment='邮箱地址（选填）',
               existing_comment='邮箱地址',
               existing_nullable=True)
    op.drop_index('ix_users_parent_user_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_parent_user_id', 'users', ['parent_user_id'], unique=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               comment='邮箱地址',
               existing_comment='邮箱地址（选填）',
               existing_nullable=True)
    op.alter_column('orders', 'external_status',
               existing_type=sa.TEXT(),
               comment='Ozon 原始状态',
               existing_comment='外部平台原始状态',
               existing_nullable=False)
    op.alter_column('orders', 'external_no',
               existing_type=sa.TEXT(),
               comment='posting_number 买家可见编号',
               existing_comment='外部平台订单编号',
               existing_nullable=False)
    op.alter_column('orders', 'external_id',
               existing_type=sa.TEXT(),
               comment='Ozon order_id',
               existing_comment='外部平台订单ID',
               existing_nullable=False)
    op.alter_column('orders', 'platform',
               existing_type=sa.TEXT(),
               comment='平台标识，固定为 ozon',
               existing_comment='平台标识',
               existing_nullable=False)
    op.alter_column('api_keys', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='是否激活',
               existing_nullable=False)
    op.create_table('watermark_configs',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('watermark_configs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('shop_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('cloudinary_public_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('color_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('scale_ratio', sa.NUMERIC(precision=5, scale=3), autoincrement=False, nullable=False),
    sa.Column('opacity', sa.NUMERIC(precision=3, scale=2), autoincrement=False, nullable=False),
    sa.Column('margin_pixels', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('positions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['shop_id'], ['ozon_shops.id'], name='watermark_configs_shop_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='watermark_configs_pkey'),
    comment='水印配置表',
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_watermark_configs_shop_id', 'watermark_configs', ['shop_id'], unique=False)
    op.create_table('ozon_refunds',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('shop_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('refund_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('refund_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('posting_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('refund_amount', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=False),
    sa.Column('commission_refund', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True),
    sa.Column('refund_items', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('reason_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('customer_comment', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('requested_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('approved_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['ozon_orders.id'], name='ozon_refunds_order_id_fkey'),
    sa.ForeignKeyConstraint(['posting_id'], ['ozon_postings.id'], name='ozon_refunds_posting_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ozon_refunds_pkey'),
    sa.UniqueConstraint('refund_id', name='ozon_refunds_refund_id_key')
    )
    op.create_index('idx_ozon_refunds_status', 'ozon_refunds', ['shop_id', 'status'], unique=False)
    op.create_index('idx_ozon_refunds_date', 'ozon_refunds', ['shop_id', 'requested_at'], unique=False)
    op.create_table('ozon_postings',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('ozon_postings_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('shop_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('posting_number', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('ozon_posting_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('substatus', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('shipment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('delivery_method_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('delivery_method_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('warehouse_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('packages_count', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('total_weight', sa.NUMERIC(precision=10, scale=3), autoincrement=False, nullable=True),
    sa.Column('is_cancelled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('cancel_reason_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cancel_reason', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('raw_payload', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('in_process_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('shipped_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('delivered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cancelled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['ozon_orders.id'], name='ozon_postings_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ozon_postings_pkey'),
    sa.UniqueConstraint('posting_number', name='ozon_postings_posting_number_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_ozon_postings_warehouse', 'ozon_postings', ['warehouse_id', 'status'], unique=False)
    op.create_index('idx_ozon_postings_status', 'ozon_postings', ['shop_id', 'status'], unique=False)
    op.create_index('idx_ozon_postings_date', 'ozon_postings', ['shop_id', 'shipment_date'], unique=False)
    op.create_table('ozon_chat_messages',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('shop_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('chat_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('message_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('message_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sender_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('sender_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('sender_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_edited', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('read_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('edited_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ozon_chat_messages_pkey'),
    sa.UniqueConstraint('message_id', name='ozon_chat_messages_message_id_key')
    )
    op.create_index('ix_ozon_chat_messages_shop_id', 'ozon_chat_messages', ['shop_id'], unique=False)
    op.create_index('ix_ozon_chat_messages_chat_id', 'ozon_chat_messages', ['chat_id'], unique=False)
    op.create_index('idx_ozon_chat_unread', 'ozon_chat_messages', ['shop_id', 'is_read', 'created_at'], unique=False)
    op.create_index('idx_ozon_chat_shop_chat', 'ozon_chat_messages', ['shop_id', 'chat_id', 'created_at'], unique=False)
    op.create_table('ozon_sync_logs',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('shop_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('entity_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('sync_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('batch_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('batch_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('processed_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('success_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('failed_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('skipped_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.VARCHAR(length=2000), autoincrement=False, nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('duration_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('api_calls', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rate_limit_hits', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ozon_sync_logs_pkey')
    )
    op.create_index('idx_ozon_sync_log_status', 'ozon_sync_logs', ['status', 'started_at'], unique=False)
    op.create_index('idx_ozon_sync_log_shop', 'ozon_sync_logs', ['shop_id', 'entity_type', 'started_at'], unique=False)
    op.create_index('idx_ozon_sync_log_batch', 'ozon_sync_logs', ['batch_id'], unique=False)
    op.create_table('ozon_orders',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('ozon_orders_id_seq'::regclass)"), autoincrement=True, nullable=False, comment='订单ID'),
    sa.Column('shop_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='店铺ID'),
    sa.Column('order_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='订单ID'),
    sa.Column('order_number', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='订单号'),
    sa.Column('posting_number', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='发货单号'),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='订单状态'),
    sa.Column('substatus', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='子状态'),
    sa.Column('delivery_type', sa.VARCHAR(length=200), autoincrement=False, nullable=False, comment='配送类型 FBS/FBO/CrossDock'),
    sa.Column('is_express', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否快递'),
    sa.Column('is_premium', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否优质订单'),
    sa.Column('total_price', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='订单总额'),
    sa.Column('products_price', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='商品总额'),
    sa.Column('delivery_price', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='运费'),
    sa.Column('commission_amount', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='佣金'),
    sa.Column('customer_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='客户ID'),
    sa.Column('customer_phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='客户电话'),
    sa.Column('customer_email', sa.VARCHAR(length=200), autoincrement=False, nullable=True, comment='客户邮箱'),
    sa.Column('delivery_address', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='配送地址'),
    sa.Column('delivery_method', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='配送方式'),
    sa.Column('tracking_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='运单号'),
    sa.Column('items', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='订单商品'),
    sa.Column('in_process_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='处理时间'),
    sa.Column('shipment_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='发货截止时间'),
    sa.Column('delivering_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='配送时间'),
    sa.Column('delivered_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='送达时间'),
    sa.Column('cancelled_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='取消时间'),
    sa.Column('cancel_reason', sa.TEXT(), autoincrement=False, nullable=True, comment='取消原因'),
    sa.Column('analytics_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='分析数据'),
    sa.Column('financial_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='财务数据'),
    sa.Column('sync_status', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='同步状态'),
    sa.Column('sync_error', sa.TEXT(), autoincrement=False, nullable=True, comment='同步错误信息'),
    sa.Column('last_sync_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='最后同步时间'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='更新时间'),
    sa.Column('warehouse_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='仓库ID'),
    sa.Column('warehouse_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True, comment='仓库名称'),
    sa.Column('tpl_provider_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='物流商ID'),
    sa.Column('tpl_provider_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True, comment='物流商名称'),
    sa.Column('tpl_integration_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='物流集成类型'),
    sa.Column('provider_status', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='物流商状态'),
    sa.Column('upper_barcode', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='上条形码'),
    sa.Column('lower_barcode', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='下条形码'),
    sa.Column('cancel_reason_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='取消原因ID'),
    sa.Column('cancellation_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='取消类型'),
    sa.Column('cancelled_after_ship', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='发货后取消'),
    sa.Column('affect_cancellation_rating', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='影响评分'),
    sa.Column('cancellation_initiator', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='取消发起方'),
    sa.Column('previous_substatus', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='前一个子状态'),
    sa.Column('requirements', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='特殊要求'),
    sa.Column('addressee', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='收件人信息'),
    sa.Column('is_legal', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否法人订单'),
    sa.Column('payment_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='支付类型组'),
    sa.Column('delivery_date_begin', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='配送开始时间'),
    sa.Column('delivery_date_end', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='配送结束时间'),
    sa.Column('sync_mode', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='同步模式：full或incremental'),
    sa.Column('sync_version', sa.INTEGER(), autoincrement=False, nullable=True, comment='同步版本号'),
    sa.Column('barcodes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='条形码对象'),
    sa.Column('cancellation_detail', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='取消详情对象'),
    sa.Column('delivery_method_detail', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='配送方式详情'),
    sa.Column('optional_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='可选信息'),
    sa.Column('related_postings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='相关订单'),
    sa.Column('product_exemplars', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='产品样本'),
    sa.Column('legal_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='法律信息'),
    sa.Column('translit', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='音译信息'),
    sa.Column('purchase_price', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='进货价格'),
    sa.Column('domestic_tracking_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='国内运单号'),
    sa.Column('material_cost', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='材料费用'),
    sa.Column('order_notes', sa.TEXT(), autoincrement=False, nullable=True, comment='订单备注'),
    sa.Column('ozon_order_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='Ozon订单号'),
    sa.Column('ozon_order_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='Ozon订单编号'),
    sa.Column('ozon_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='原始Ozon状态'),
    sa.Column('payment_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='支付状态'),
    sa.Column('order_type', sa.VARCHAR(length=50), server_default=sa.text("'FBS'::character varying"), autoincrement=False, nullable=True, comment='订单类型'),
    sa.Column('delivery_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='配送日期'),
    sa.Column('delivery_time_slot', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='配送时间段'),
    sa.Column('raw_payload', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='Ozon原始订单数据'),
    sa.Column('ordered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='下单时间'),
    sa.Column('confirmed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='确认时间'),
    sa.Column('shipped_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='发货时间'),
    sa.ForeignKeyConstraint(['shop_id'], ['ozon_shops.id'], name='ozon_orders_shop_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='ozon_orders_pkey'),
    sa.UniqueConstraint('shop_id', 'posting_number', name='uq_ozon_order_shop_posting'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_ozon_orders_warehouse_id', 'ozon_orders', ['warehouse_id'], unique=False)
    op.create_index('ix_ozon_orders_tpl_provider_id', 'ozon_orders', ['tpl_provider_id'], unique=False)
    op.create_index('ix_ozon_orders_sync_mode', 'ozon_orders', ['sync_mode'], unique=False)
    op.create_index('ix_ozon_orders_status', 'ozon_orders', ['status'], unique=False)
    op.create_index('ix_ozon_orders_shop_id', 'ozon_orders', ['shop_id'], unique=False)
    op.create_index('ix_ozon_orders_posting_number', 'ozon_orders', ['posting_number'], unique=False)
    op.create_index('ix_ozon_orders_payment_type', 'ozon_orders', ['payment_type'], unique=False)
    op.create_index('ix_ozon_orders_order_number', 'ozon_orders', ['order_number'], unique=False)
    op.create_index('ix_ozon_orders_is_legal', 'ozon_orders', ['is_legal'], unique=False)
    op.create_index('ix_ozon_orders_delivery_type', 'ozon_orders', ['delivery_type'], unique=False)
    op.create_index('ix_ozon_orders_created_at', 'ozon_orders', ['created_at'], unique=False)
    op.create_index('ix_ozon_orders_cancel_reason_id', 'ozon_orders', ['cancel_reason_id'], unique=False)
    op.create_table('cloudinary_configs',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('cloud_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('api_key', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('api_secret_encrypted', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('folder_prefix', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('auto_cleanup_days', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_quota_check', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('storage_used_bytes', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('bandwidth_used_bytes', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_test_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_test_success', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='cloudinary_configs_pkey'),
    comment='Cloudinary配置表'
    )
    op.create_table('ozon_products',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('ozon_products_id_seq'::regclass)"), autoincrement=True, nullable=False, comment='商品ID'),
    sa.Column('shop_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='店铺ID'),
    sa.Column('sku', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='商品SKU'),
    sa.Column('offer_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='Ozon Offer ID'),
    sa.Column('ozon_product_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='Ozon Product ID'),
    sa.Column('ozon_sku', sa.BIGINT(), autoincrement=False, nullable=True, comment='Ozon SKU'),
    sa.Column('title', sa.VARCHAR(length=500), autoincrement=False, nullable=False, comment='商品标题'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='商品描述'),
    sa.Column('barcode', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='条形码'),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='类目ID'),
    sa.Column('brand', sa.VARCHAR(length=200), autoincrement=False, nullable=True, comment='品牌'),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='商品状态: on_sale=销售中, ready_to_sell=准备销售, error=错误, pending_modification=待修改, inactive=下架, archived=已归档'),
    sa.Column('visibility', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否可见'),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='是否归档'),
    sa.Column('price', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='当前价格'),
    sa.Column('old_price', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='原价'),
    sa.Column('premium_price', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='会员价'),
    sa.Column('cost', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='成本价'),
    sa.Column('min_price', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=True, comment='最低价'),
    sa.Column('stock', sa.INTEGER(), autoincrement=False, nullable=False, comment='总库存'),
    sa.Column('reserved', sa.INTEGER(), autoincrement=False, nullable=False, comment='预留库存'),
    sa.Column('available', sa.INTEGER(), autoincrement=False, nullable=False, comment='可售库存'),
    sa.Column('weight', sa.INTEGER(), autoincrement=False, nullable=True, comment='重量(g)'),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True, comment='宽度(mm)'),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True, comment='高度(mm)'),
    sa.Column('depth', sa.INTEGER(), autoincrement=False, nullable=True, comment='深度(mm)'),
    sa.Column('images', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='商品图片'),
    sa.Column('attributes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='商品属性'),
    sa.Column('sync_status', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='同步状态'),
    sa.Column('sync_error', sa.TEXT(), autoincrement=False, nullable=True, comment='同步错误信息'),
    sa.Column('last_sync_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='最后同步时间'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='更新时间'),
    sa.Column('ozon_archived', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False, comment='OZON归档状态'),
    sa.Column('ozon_has_fbo_stocks', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False, comment='是否有FBO库存'),
    sa.Column('ozon_has_fbs_stocks', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False, comment='是否有FBS库存'),
    sa.Column('ozon_is_discounted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False, comment='是否打折'),
    sa.Column('ozon_visibility_status', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='OZON可见性状态'),
    sa.Column('ozon_created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='商品在OZON平台的创建时间'),
    sa.Column('ozon_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='OZON原生状态'),
    sa.Column('status_reason', sa.TEXT(), autoincrement=False, nullable=True, comment='状态原因说明'),
    sa.Column('ozon_visibility_details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='OZON可见性详情'),
    sa.Column('currency_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True, comment='货币代码(CNY/RUB/USD等)'),
    sa.Column('raw_payload', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='Ozon原始数据'),
    sa.CheckConstraint("status::text = ANY (ARRAY['on_sale'::character varying, 'ready_to_sell'::character varying, 'error'::character varying, 'pending_modification'::character varying, 'inactive'::character varying, 'archived'::character varying]::text[])", name='check_ozon_product_status'),
    sa.ForeignKeyConstraint(['shop_id'], ['ozon_shops.id'], name='ozon_products_shop_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='ozon_products_pkey'),
    sa.UniqueConstraint('shop_id', 'sku', name='uq_ozon_product_shop_sku'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_ozon_products_sync_status', 'ozon_products', ['sync_status'], unique=False)
    op.create_index('ix_ozon_products_status', 'ozon_products', ['status'], unique=False)
    op.create_index('ix_ozon_products_sku', 'ozon_products', ['sku'], unique=False)
    op.create_index('ix_ozon_products_shop_id', 'ozon_products', ['shop_id'], unique=False)
    op.create_index('ix_ozon_products_ozon_status', 'ozon_products', ['ozon_status'], unique=False)
    op.create_index('ix_ozon_products_offer_id', 'ozon_products', ['offer_id'], unique=False)
    op.create_index('idx_ozon_products_ozon_visibility', 'ozon_products', ['ozon_visibility_status'], unique=False)
    op.create_index('idx_ozon_products_ozon_archived', 'ozon_products', ['ozon_archived'], unique=False)
    op.create_table('ozon_shops',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('ozon_shops_id_seq'::regclass)"), autoincrement=True, nullable=False, comment='Ozon店铺ID'),
    sa.Column('shop_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False, comment='店铺名称'),
    sa.Column('platform', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='平台名称'),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='店铺状态'),
    sa.Column('owner_user_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='店铺所有者ID'),
    sa.Column('client_id', sa.VARCHAR(length=200), autoincrement=False, nullable=False, comment='Ozon Client ID'),
    sa.Column('api_key_enc', sa.TEXT(), autoincrement=False, nullable=False, comment='加密的API Key'),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False, comment='店铺配置（Webhook、同步设置等）'),
    sa.Column('stats', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='店铺统计信息'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='更新时间'),
    sa.Column('last_sync_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='最后同步时间'),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], name='ozon_shops_owner_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='ozon_shops_pkey'),
    sa.UniqueConstraint('owner_user_id', 'shop_name', name='uq_ozon_shop_owner_name'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_ozon_shops_status', 'ozon_shops', ['status'], unique=False)
    op.create_index('ix_ozon_shops_owner_user_id', 'ozon_shops', ['owner_user_id'], unique=False)
    op.create_table('ozon_shipment_packages',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('posting_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('package_number', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('tracking_number', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('carrier_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('carrier_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('carrier_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('weight', sa.NUMERIC(precision=10, scale=3), autoincrement=False, nullable=True),
    sa.Column('width', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('height', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('length', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('label_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('label_printed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('status_updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('tracking_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['posting_id'], ['ozon_postings.id'], name='ozon_shipment_packages_posting_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ozon_shipment_packages_pkey'),
    sa.UniqueConstraint('posting_id', 'package_number', name='uq_ozon_packages')
    )
    op.create_index('idx_ozon_packages_tracking', 'ozon_shipment_packages', ['tracking_number'], unique=False)
    op.create_table('ozon_chats',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('shop_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('chat_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('chat_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('subject', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('customer_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('customer_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_closed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('order_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('message_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unread_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_message_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_message_preview', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('closed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ozon_chats_pkey'),
    sa.UniqueConstraint('chat_id', name='ozon_chats_chat_id_key')
    )
    op.create_index('ix_ozon_chats_shop_id', 'ozon_chats', ['shop_id'], unique=False)
    op.create_index('idx_ozon_chat_shop_status', 'ozon_chats', ['shop_id', 'status', 'last_message_at'], unique=False)
    op.create_index('idx_ozon_chat_order', 'ozon_chats', ['order_number'], unique=False)
    op.create_table('ozon_product_selection_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='商品ID'),
    sa.Column('product_name_ru', sa.VARCHAR(length=500), autoincrement=False, nullable=True, comment='俄文名称'),
    sa.Column('product_name_cn', sa.VARCHAR(length=500), autoincrement=False, nullable=True, comment='中文名称'),
    sa.Column('ozon_link', sa.TEXT(), autoincrement=False, nullable=True, comment='商品链接'),
    sa.Column('image_url', sa.TEXT(), autoincrement=False, nullable=True, comment='图片链接'),
    sa.Column('category_link', sa.TEXT(), autoincrement=False, nullable=True, comment='类目链接'),
    sa.Column('brand', sa.VARCHAR(length=200), autoincrement=False, nullable=True, comment='品牌'),
    sa.Column('brand_normalized', sa.VARCHAR(length=200), autoincrement=False, nullable=True, comment='标准化品牌名'),
    sa.Column('current_price', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True, comment='当前价格(卢布)'),
    sa.Column('original_price', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True, comment='原价(卢布)'),
    sa.Column('rfbs_commission_low', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='rFBS(<=1500₽)佣金率'),
    sa.Column('rfbs_commission_mid', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='rFBS(1501-5000₽)佣金率'),
    sa.Column('rfbs_commission_high', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='rFBS(>5000₽)佣金率'),
    sa.Column('fbp_commission_low', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='FBP(<=1500₽)佣金率'),
    sa.Column('fbp_commission_mid', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='FBP(1501-5000₽)佣金率'),
    sa.Column('fbp_commission_high', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='FBP(>5000₽)佣金率'),
    sa.Column('monthly_sales_volume', sa.INTEGER(), autoincrement=False, nullable=True, comment='月销量(件)'),
    sa.Column('monthly_sales_revenue', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True, comment='月销售额(卢布)'),
    sa.Column('daily_sales_volume', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='平均日销量(件)'),
    sa.Column('daily_sales_revenue', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True, comment='平均日销售额(卢布)'),
    sa.Column('sales_dynamic_percent', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='销售动态(%)'),
    sa.Column('conversion_rate', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='成交率(%)'),
    sa.Column('package_weight', sa.INTEGER(), autoincrement=False, nullable=True, comment='包装重量(克)'),
    sa.Column('package_volume', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='包装体积(升)'),
    sa.Column('package_length', sa.INTEGER(), autoincrement=False, nullable=True, comment='包装长度(mm)'),
    sa.Column('package_width', sa.INTEGER(), autoincrement=False, nullable=True, comment='包装宽度(mm)'),
    sa.Column('package_height', sa.INTEGER(), autoincrement=False, nullable=True, comment='包装高度(mm)'),
    sa.Column('rating', sa.NUMERIC(precision=3, scale=2), autoincrement=False, nullable=True, comment='商品评分'),
    sa.Column('review_count', sa.INTEGER(), autoincrement=False, nullable=True, comment='评价数量'),
    sa.Column('seller_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='卖家类型(FBS/FBO)'),
    sa.Column('delivery_days', sa.INTEGER(), autoincrement=False, nullable=True, comment='配送时间(天)'),
    sa.Column('availability_percent', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='商品可用性(%)'),
    sa.Column('ad_cost_share', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='广告费用份额(%)'),
    sa.Column('product_created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='商品创建日期'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('competitor_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True, comment='跟卖者数量'),
    sa.Column('competitor_min_price', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True, comment='跟卖最低价(卢布)'),
    sa.Column('market_min_price', sa.NUMERIC(precision=18, scale=2), autoincrement=False, nullable=True, comment='市场最低价(卢布)'),
    sa.Column('price_index', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='价格指数'),
    sa.Column('images_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='商品图片信息列表'),
    sa.Column('images_updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='图片信息更新时间'),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='用户ID'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_product_selection_user_id'),
    sa.PrimaryKeyConstraint('id', name='ozon_product_selection_items_pkey')
    )
    op.create_index('ix_ozon_product_selection_items_package_weight', 'ozon_product_selection_items', ['package_weight'], unique=False)
    op.create_index('ix_ozon_product_selection_items_monthly_sales_volume', 'ozon_product_selection_items', ['monthly_sales_volume'], unique=False)
    op.create_index('ix_ozon_product_selection_items_id', 'ozon_product_selection_items', ['id'], unique=False)
    op.create_index('ix_ozon_product_selection_items_brand_normalized', 'ozon_product_selection_items', ['brand_normalized'], unique=False)
    op.create_index('ix_ozon_product_selection_items_brand', 'ozon_product_selection_items', ['brand'], unique=False)
    op.create_index('idx_user_product_name', 'ozon_product_selection_items', ['user_id', 'product_id', 'product_name_ru'], unique=False)
    op.create_index('idx_sales_weight', 'ozon_product_selection_items', ['monthly_sales_volume', 'package_weight'], unique=False)
    op.create_index('idx_product_selection_user_id', 'ozon_product_selection_items', ['user_id'], unique=False)
    op.create_index('idx_product_id_name', 'ozon_product_selection_items', ['product_id', 'product_name_ru'], unique=False)
    op.create_index('idx_product_id', 'ozon_product_selection_items', ['product_id'], unique=False)
    op.create_index('idx_commission', 'ozon_product_selection_items', ['rfbs_commission_low', 'rfbs_commission_mid', 'fbp_commission_low', 'fbp_commission_mid'], unique=False)
    op.create_index('idx_brand_price', 'ozon_product_selection_items', ['brand_normalized', 'current_price'], unique=False)
    op.create_table('ozon_order_items',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('sku', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('offer_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('ozon_sku', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=False),
    sa.Column('discount', sa.NUMERIC(precision=18, scale=4), server_default=sa.text("'0'::numeric"), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.NUMERIC(precision=18, scale=4), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['ozon_orders.id'], name='ozon_order_items_order_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ozon_order_items_pkey')
    )
    op.create_index('idx_ozon_order_items_sku', 'ozon_order_items', ['sku'], unique=False)
    op.create_index('idx_ozon_order_items_order', 'ozon_order_items', ['order_id', 'status'], unique=False)
    op.create_table('watermark_tasks',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('shop_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('watermark_config_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('task_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('original_images', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('processed_images', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('cloudinary_public_ids', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('processing_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('retry_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_retries', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('batch_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('batch_total', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('batch_position', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('processing_started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['ozon_products.id'], name='watermark_tasks_product_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['shop_id'], ['ozon_shops.id'], name='watermark_tasks_shop_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['watermark_config_id'], ['watermark_configs.id'], name='watermark_tasks_watermark_config_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='watermark_tasks_pkey'),
    comment='水印任务表'
    )
    op.create_index('uq_watermark_task_processing', 'watermark_tasks', ['shop_id', 'product_id', 'status'], unique=False, postgresql_where="((status)::text = ANY ((ARRAY['pending'::character varying, 'processing'::character varying])::text[]))")
    op.create_index('ix_watermark_tasks_status', 'watermark_tasks', ['status'], unique=False)
    op.create_index('ix_watermark_tasks_shop_id', 'watermark_tasks', ['shop_id'], unique=False)
    op.create_index('ix_watermark_tasks_product_id', 'watermark_tasks', ['product_id'], unique=False)
    op.create_index('ix_watermark_tasks_created_at', 'watermark_tasks', ['created_at'], unique=False)
    op.create_index('ix_watermark_tasks_batch_id', 'watermark_tasks', ['batch_id'], unique=False)
    op.create_table('ozon_product_selection_import_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='文件名'),
    sa.Column('file_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False, comment='文件类型(xlsx/csv)'),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True, comment='文件大小(字节)'),
    sa.Column('imported_by', sa.INTEGER(), autoincrement=False, nullable=False, comment='导入用户ID'),
    sa.Column('import_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='导入时间'),
    sa.Column('import_strategy', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='导入策略(skip/update/append)'),
    sa.Column('total_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='总行数'),
    sa.Column('success_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='成功行数'),
    sa.Column('failed_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='失败行数'),
    sa.Column('updated_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='更新行数'),
    sa.Column('skipped_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='跳过行数'),
    sa.Column('import_log', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='导入日志详情'),
    sa.Column('error_details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='错误详情'),
    sa.Column('process_duration', sa.INTEGER(), autoincrement=False, nullable=True, comment='处理耗时(秒)'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ozon_product_selection_import_history_pkey')
    )
    op.create_index('ix_ozon_product_selection_import_history_id', 'ozon_product_selection_import_history', ['id'], unique=False)
    # ### end Alembic commands ###